(function fix_last_tab(thisObj){  alert("this is not working"); return;var sel = app.activeDocument.selection;   if(sel.length < 1) {       alert("no selection");//~                error_wrong_type (sel);       return 0;       }else{   if(!(sel[0].hasOwnProperty ("parentPage"))){        error_wrong_type (sel[0]);//~         alert("this seems to be no textFrame");        return 0;       }   var page = sel[0].parentPage;   var margPrefs = page.marginPreferences;   var columns = margPrefs.columnsPositions;//~     alert( columns[1] + margPrefs.left  - columns[0]);   var mwidth = columns[1] - columns[0] ;//  62.333 or 44.;    for(var i = 0; i < sel.length;i++){            var item = sel[i];            if(!(item instanceof TextFrame)){                error_wrong_type (item);//~                 alert(item.constructor.name +" <-- this is no TextFrame");                continue;                }            var w = calc_last_tab(item);            for (var j = 0; j < item.paragraphs.length; j++) {              var curpar = item.paragraphs[j];            // var firstpar = item.paragraphs[0];               var lasttab = curpar.tabStops.lastItem();              if(lasttab.alignment == TabStopAlignment.RIGHT_ALIGN){                  // lasttab.position = Math.floor(w);                }else{                  lasttab.alignment =TabStopAlignment.RIGHT_ALIGN;              }                  lasttab.position = Math.floor(w - 0.1);            }        }   }function calc_last_tab (frame) {  var gb = frame.geometricBounds;  var w = gb[1] - gb[0];  return w;}function error_wrong_type(item){                     alert(item.constructor.name +" <-- this is no TextFrame");     }       })(this);